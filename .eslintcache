[{"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\index.js":"1","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\App.js":"2","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\TodoList.js":"3","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\Navbar.js":"4","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\pages\\Home.js":"5","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\pages\\About.js":"6","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\Card.js":"7","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\modals\\CreateTask.js":"8","C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\modals\\EditTask.js":"9","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\index.js":"10","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\App.js":"11","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\TodoList.js":"12","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\Home.js":"13","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\Navbar.js":"14","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\About.js":"15","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\Card.js":"16","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\modals\\EditTask.js":"17","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\modals\\CreateTask.js":"18","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\Login.js":"19"},{"size":222,"mtime":1617641079000,"results":"20","hashOfConfig":"21"},{"size":921,"mtime":1617724880357,"results":"22","hashOfConfig":"21"},{"size":3299,"mtime":1617724712874,"results":"23","hashOfConfig":"21"},{"size":755,"mtime":1617641079000,"results":"24","hashOfConfig":"21"},{"size":191,"mtime":1617641079000,"results":"25","hashOfConfig":"21"},{"size":140,"mtime":1617641079000,"results":"26","hashOfConfig":"21"},{"size":2905,"mtime":1617724780111,"results":"27","hashOfConfig":"21"},{"size":2126,"mtime":1617722137561,"results":"28","hashOfConfig":"21"},{"size":1923,"mtime":1617656154948,"results":"29","hashOfConfig":"21"},{"size":222,"mtime":1617641079000,"results":"30","hashOfConfig":"31"},{"size":1108,"mtime":1617825504152,"results":"32","hashOfConfig":"31"},{"size":3339,"mtime":1617744436548,"results":"33","hashOfConfig":"31"},{"size":191,"mtime":1617641079000,"results":"34","hashOfConfig":"31"},{"size":1051,"mtime":1617825513482,"results":"35","hashOfConfig":"31"},{"size":1628,"mtime":1617826618562,"results":"36","hashOfConfig":"31"},{"size":2957,"mtime":1617826558186,"results":"37","hashOfConfig":"31"},{"size":2002,"mtime":1617749571298,"results":"38","hashOfConfig":"31"},{"size":2167,"mtime":1617749785191,"results":"39","hashOfConfig":"31"},{"size":3248,"mtime":1617826278776,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"109iqrm",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"s2d58t",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\index.js",[],["84","85"],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\App.js",["86","87"],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\TodoList.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\Navbar.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\pages\\Home.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\pages\\About.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\components\\Card.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\modals\\CreateTask.js",[],"C:\\Users\\YAMAN\\Desktop\\sonchallenge\\sonchallenge\\src\\modals\\EditTask.js",["88"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj, index }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    tempObj.todos = taskObj.todos;\n    tempObj.checked = taskObj.checked;\n    updateTask(tempObj, index);\n    toggle();\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Project</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Project Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleChange}\n            name=\"taskName\"\n            maxLength=\"18\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleChange}\n            name=\"description\"\n            maxLength=\"25\"\n          ></textarea>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\index.js",[],["89","90"],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\App.js",["91"],"import { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./pages/Login\";\nimport ToDoList from \"./components/TodoList\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [showNav, setShowNav] = useState(false);\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact={true} component={Login} />\n\n          <div>\n            <header>\n              <GiHamburgerMenu\n                onClick={() => setShowNav(!showNav)}\n                style={{ cursor: \"pointer\" }}\n              />\n            </header>\n            <Navbar show={showNav} />\n\n            <Route path=\"/home\" exact={true} component={Home} />\n            <Route path=\"/about\" exact={true} component={About} />\n          </div>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\TodoList.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\Home.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\Navbar.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\About.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\components\\Card.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\modals\\EditTask.js",["92"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj, index }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    if (taskName.length > 0 && description.length > 0) {\n      e.preventDefault();\n      let tempObj = {};\n      tempObj[\"Name\"] = taskName;\n      tempObj[\"Description\"] = description;\n      tempObj.todos = taskObj.todos;\n      tempObj.checked = taskObj.checked;\n      updateTask(tempObj, index);\n      toggle();\n    }\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Project</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Project Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleChange}\n            name=\"taskName\"\n            maxLength=\"18\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleChange}\n            name=\"description\"\n            maxLength=\"25\"\n          ></textarea>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\modals\\CreateTask.js",[],"C:\\Users\\YAMAN\\Desktop\\Patika-TaskList\\React-todo-list-master\\src\\pages\\Login.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":35,"nodeType":"99","messageId":"100","endLine":2,"endColumn":41},{"ruleId":"97","severity":1,"message":"101","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":21,"column":6,"nodeType":"104","endLine":21,"endColumn":8,"suggestions":"105"},{"ruleId":"93","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","severity":1,"message":"101","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":21,"column":6,"nodeType":"104","endLine":21,"endColumn":8,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'ToDoList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["111"],["109"],["110"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"116","text":"117"},{"range":"118","text":"117"},[591,593],"[taskObj.Description, taskObj.Name]",[591,593]]